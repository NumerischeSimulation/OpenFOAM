/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    // level 0 - front
    (0 0 0)
    (0.4 0 0)
    (0.6 0 0)
    (1 0 0)
    (5 0 0)

    // level 1 - front
    (0 0.4 0)
    (0.4 0.4 0)
    (0.6 0.4 0)
    (1 0.4 0)
    (5 0.4 0)

    // level 2 - front
    (0 0.6 0)
    (0.4 0.6 0)
    (0.6 0.6 0)
    (1 0.6 0)
    (5 0.6 0)

    // level 3 - front
    (0 1 0)
    (0.4 1 0)
    (0.6 1 0)
    (1 1 0)
    (5 1 0)

    // level 0 - back
    (0 0 0.01)
    (0.4 0 0.01)
    (0.6 0 0.01)
    (1 0 0.01)
    (5 0 0.01)

    // level 1 - back
    (0 0.4 0.01)
    (0.4 0.4 0.01)
    (0.6 0.4 0.01)
    (1 0.4 0.01)
    (5 0.4 0.01)

    // level 2 - back
    (0 0.6 0.01)
    (0.4 0.6 0.01)
    (0.6 0.6 0.01)
    (1 0.6 0.01)
    (5 0.6 0.01)

    // level 3 - back
    (0 1 0.01)
    (0.4 1 0.01)
    (0.6 1 0.01)
    (1 1 0.01)
    (5 1 0.01)
);

blocks
(
    // level 1
    hex (0 1 6 5 20 21 26 25) (40 40 1) simpleGrading (1 1 1)
    hex (1 2 7 6 21 22 27 26) (20 40 1) simpleGrading (1 1 1)
    hex (2 3 8 7 22 23 28 27) (40 40 1) simpleGrading (1 1 1)
    hex (3 4 9 8 23 24 29 28) (400 40 1) simpleGrading (1 1 1)

    // level 2
    hex (5 6 11 10 25 26 31 30) (40 20 1) simpleGrading (1 1 1)
    //hex (6 7 12 11 26 27 32 31) (20 20 1) simpleGrading (1 1 1) //
    hex (7 8 13 12 27 28 33 32) (40 20 1) simpleGrading (1 1 1)
    hex (8 9 14 13 28 29 34 33) (400 20 1) simpleGrading (1 1 1)

    // level 3
    hex (10 11 16 15 30 31 36 35) (40 40 1) simpleGrading (1 1 1)
    hex (11 12 17 16 31 32 37 36) (20 40 1) simpleGrading (1 1 1)
    hex (12 13 18 17 32 33 38 37) (40 40 1) simpleGrading (1 1 1)
    hex (13 14 19 18 33 34 39 38) (400 40 1) simpleGrading (1 1 1)
);

edges
(
    // unten
    arc 6 7 (0.5 0.358578 0)
    arc 26 27 (0.5 0.358578 0.01)

    // rechts
    arc 7 12 (0.641421 0.5 0)
    arc 27 32 (0.641421 0.5 0.01)

    // links
    arc 6 11 (0.358578 0.5 0)
    arc 26 31 (0.358578 0.5 0.01)

    // oben
    arc 11 12 (0.5 0.641421 0)
    arc 31 32 (0.5 0.641421 0.01)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 5 25 20)
            (5 10 30 25)
            (10 15 35 30)
        );
    }
    outlet
    {
    	type patch;
    	faces
    	(
            (4 24 29 9)
            (9 29 34 14)
            (14 34 39 19)
        );
    }
    fixedWalls
    {
        type wall;
        faces
        (
            (0 20 21 1)
            (1 21 22 2)
            (2 22 23 3)
            (3 23 24 4)

            (15 16 36 35)
            (16 17 37 36)
            (17 18 38 37)
            (18 19 39 38)
        );
    }
    cylinder
    {
        type wall;
        faces
        (
            (6 7 27 26)
            (7 12 32 27)
            (12 11 31 32)
            (11 6 26 31)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 1 6 5)
            (1 2 7 6)
            (2 3 8 7)
            (3 4 9 8)
            (5 6 11 10)
            //(6 7 12 11) //
            (7 8 13 12)
            (8 9 14 13)
            (10 11 16 15)
            (11 12 17 16)
            (12 13 18 17)
            (13 14 19 18)
            
            (20 25 26 21)
            (21 26 27 22)
            (22 27 28 23)
            (23 28 29 24)
            (25 30 31 26)
            //(26 31 32 27) //
            (27 32 33 28)
            (28 33 34 29)
            (30 35 36 31)
            (31 36 37 32)
            (32 37 38 33)
            (33 38 39 34)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
